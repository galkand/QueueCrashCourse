---
services:
  db_transactions:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactions_db
    volumes:
      - transactions_data:/var/lib/postgresql/data
    networks:
      - txnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  transaction_processor:
    build: ./transaction_processor
    volumes:
      - ./transaction_processor:/app
    depends_on:
      db_transactions:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@db_transactions:5432/transactions_db
      FAULTY: 0.2
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8000:8000"
    networks:
      - txnet

  kafka:
    image: apache/kafka:3.7.1
    init: true
    environment:
      KAFKA_LOG4J_LOGGERS: "kafka=WARN,kafka.controller=WARN,kafka.log.LogCleaner=WARN,state.change.logger=WARN,kafka.producer.async.DefaultEventHandler=WARN,kafka.coordinator.group.GroupMetadataManager=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_LOG4J_TOOLS_LOGLEVEL: ERROR

      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1

      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093

      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - txnet

  outbox_processor:
    build: ./outbox_processor
    volumes:
      - ./outbox_processor:/app
    depends_on:
      db_transactions:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:postgres@db_transactions:5432/transactions_db
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: transactions
      FAULTY: 0.2
    init: true
    command: ["python", "outbox_processor.py"]
    networks:
      - txnet

  db_balance:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: balance_db
    volumes:
      - balance_data:/var/lib/postgresql/data
    networks:
      - txnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  inbox_processor:
    build: ./inbox_processor
    volumes:
      - ./inbox_processor:/app
    depends_on:
      db_balance:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:postgres@db_balance:5432/balance_db
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: transactions
      FAULTY: 0.2
    init: true
    command: ["python", "inbox_processor.py"]
    networks:
      - txnet

  balance_viewer:
    build: ./balance_viewer
    volumes:
      - ./balance_viewer:/app
    depends_on:
      db_balance:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@db_balance:5432/balance_db
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8100"]
    init: true
    ports:
      - "8100:8100"
    networks:
      - txnet


networks:
  txnet:
    driver: bridge
volumes:
  transactions_data: {}
  balance_data: {}
  kafka_data: {}